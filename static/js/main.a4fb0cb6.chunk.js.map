{"version":3,"sources":["Card.js","CardList.js","Searchbox.js","Scroll.js","App.js","index.js"],"names":["Card","props","name","username","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","key","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAkBeA,EAhBF,SAACC,GAAW,IACjBC,EAAwBD,EAAxBC,KAAKC,EAAmBF,EAAnBE,SAASC,EAAUH,EAAVG,MAAMC,EAAIJ,EAAJI,GAC3B,OACQ,yBAAKC,UAAU,yDACd,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,eACrB,6BAEC,4BAAKH,GACL,4BAAKC,GACA,2BAAIC,MCKLK,EAdA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACVC,EAAUD,EAAOE,KAAI,SAACC,EAAKC,GACjC,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAET,GAAIK,EAAOI,GAAGT,GAClCH,KAAMQ,EAAOI,GAAGZ,KAChBC,SAAUO,EAAOI,GAAGX,SACpBC,MAAOM,EAAOI,GAAGV,WAEjB,OACS,6BACAO,ICKKK,EAdC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACC,yBAAKZ,UAAU,OACV,2BACAA,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCEFI,EATF,SAACrB,GACd,OACA,yBAAKsB,MAAO,CAACC,SAAU,SAASC,OAAO,UAErCxB,EAAMyB,WCuCOC,G,wDAtCZ,aAAe,IAAD,8BACb,gBAWAC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACb,YAAaY,EAAME,OAAOC,SAX1C,EAAKC,MAAM,CACVvB,OAAO,GACPO,YAAY,IAJA,E,gEAOM,IAAD,OAClBiB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACpB,OAAO4B,S,+BAK1B,IAAD,OACDC,EAAeC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC7C,OAAOA,EAAOR,KAAKwC,cAAcC,SAAS,EAAKV,MAAMhB,YAAYyB,kBAElE,OAA8B,IAA3BF,KAAKP,MAAMvB,OAAOkC,OACb,0CAKX,yBAAKtC,UAAU,MACf,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWY,aAAcsB,KAAKZ,iBAC9B,kBAAC,EAAD,KACO,kBAAC,EAAD,CAAUlB,OAAQ6B,U,GA9BTM,c,MCGlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEA,kBAAC,EAAD,OAGAC,SAASC,eAAe,U","file":"static/js/main.a4fb0cb6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\tconst {name,username,email,id}=props;\r\n\treturn(\r\n         <div className=\" tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 \">\r\n         \t<img alt='robots' src={`https://robohash.org/${id}?50Ã—50`}/>\r\n         \t<div>\r\n\r\n         \t\t<h2>{name}</h2>\r\n         \t\t<h3>{username}</h3>\r\n                <p>{email}</p>\r\n                </div>\r\n             </div>\r\n\r\n\r\n\t\t);\r\n}\r\nexport default Card; ","import React from 'react'\r\nimport Card from './Card.js'\r\nconst CardList=({robots})=>{\r\n\tconst cardArray=robots.map((user,i)=>{\r\n\treturn <Card key={i}id={robots[i].id} \r\n\tname={robots[i].name} \r\n\tusername={robots[i].username}\r\n\temail={robots[i].email} />\r\n})\r\n\treturn (\r\n          <div>\r\n         {cardArray}\r\n         </div>\r\n\r\n\t\t);\r\n}\r\nexport default CardList;","import React from 'react'\r\n\r\nconst Searchbox=({searchfield,searchChange})=>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n       <input \r\n       className='pa3 ba b--green bg-lightest-blue' \r\n       type=\"search\" \r\n       placeholder=\"Search Robots\"\r\n       onChange={searchChange}\r\n       />\r\n\t\r\n\t</div> \r\n\t);\r\n}\r\n\r\nexport default Searchbox;","import React from 'react'\r\n\r\nconst Scroll=(props)=>{\r\nreturn(\r\n<div style={{overflow: 'scroll',height:'800px'}}>\r\n\r\n {props.children}\r\n </div>\r\n );\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from'react'\r\nimport CardList from './CardList';\r\n//import {robots} from './robot.js';\r\nimport Searchbox from './Searchbox';\r\nimport Scroll from './Scroll.js'\r\nimport './App.css';\r\nclass App extends Component{\r\n   constructor() {\r\n   \tsuper()\r\n   \tthis.state={\r\n   \t\trobots:[],\r\n   \t\tsearchfield:'',\r\n   \t}\r\n   }\r\n   componentDidMount(){\r\n   \tfetch('https://jsonplaceholder.typicode.com/users')\r\n   \t.then(response=> response.json())\r\n   \t.then(users=>this.setState({robots:users}));\r\n   }\r\n   \tonSearchChange=(event)=>{\r\n   \t\tthis.setState({searchfield: event.target.value})\r\n   \t\t}\r\n   \trender(){\r\n   \t\tconst filteredRobots=this.state.robots.filter(robots=>{\r\n   \t\t\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n   \t\t})\r\n   \t\tif(this.state.robots.length===0){\r\n   \t\t\treturn <h5>Loading...</h5>\r\n   \t\t}\r\n   \t\telse{\r\n\r\n       return(\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>Robofriends</h1>\r\n\t\t<Searchbox searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n         <CardList robots={filteredRobots}/>\r\n         </Scroll>\r\n        </div>\r\n         );\r\n   \t\t\r\n\t\r\n}\r\n}\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport CardList from './CardList.js';\n\n//import * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport {robots} from './robot.js'\nReactDOM.render(\n  <React.StrictMode>\n\n  <App />\n \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//registerServiceWorker();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}